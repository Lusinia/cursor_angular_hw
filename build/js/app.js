"use strict";var shopApp=angular.module("shopApp",["ngRoute","ngAnimate"]);shopApp.config(["$routeProvider","$locationProvider",function(t,o){t.when("/",{templateUrl:"../partials/home.html",controller:"mainController"}).when("/add",{templateUrl:"../partials/add.html",controller:"addProduct"}).when("/orders",{templateUrl:"../partials/orders.html",controller:"ShowOrders"}).when("/product/:id",{templateUrl:"../partials/product.html",controller:"ShowProduct"}).otherwise({redirectTo:"/orders"}),o.html5Mode(!0)}]),shopApp.factory("ordersFactory",function(){var t=[{id:1,title:"Cat in the dark",img:"./img/cat2.jpg",desc:"Its just me",cost:"50",quantity:1}],o={};return o.getOrders=function(){return t},o.addOrder=function(o){if(t.length>0){var r=!1;t.forEach(function(t){o.title===t.title&&(r=!0,t.quantity++)}),r||t.push(o)}},o.defineCostForItems=function(t){var o=0;return t.forEach(function(t){o+=+t.cost}),o},o}),shopApp.factory("productsFactory",["$http","$location",function(t,o){var r=function(){return t.get("http://localhost:8080/")},e=[],n={};return n.getJSON=function(){return r()},n.getProducts=function(){return e},n.setProducts=function(t){e=t},n.addProduct=function(r){t({method:"post",url:"http://localhost:8080/",data:JSON.stringify(r),config:"Content-Type: application/json;"}).then(function(t){console.log(t),o.path("/")},function(t){console.log(t)})},n.deleteProduct=function(o){var r={index:o.index,productId:o.product.id};t.delete("http://localhost:8080/product/"+r.productId,{params:r}).then(function(t){console.log(t)})},n.findProductById=function(t){var o=void 0;return e.forEach(function(r){r.id==t&&(o=r)}),o},n}]),shopApp.controller("ShowOrders",["$scope","$routeParams","productsFactory","ordersFactory",function(t,o,r,e){t.pageStyle="showOrdersStyle",t.orders=[],t.sum=e.defineCostForItems(e.getOrders()),t.item={},t.selected={value:0};t.orders=e.getOrders(),t.removeOrder=function(o){t.orders[o].quantity>1?t.orders[o].quantity-=1:1===t.orders[o].quantity&&t.orders.splice(o,1)}}]),shopApp.controller("ShowProduct",["$scope","$routeParams","productsFactory","ordersFactory",function(t,o,r,e){t.pageStyle="showProductStyle",t.ProductId=o.id;var n=r.findProductById(t.ProductId);t.img=n.img,t.title=n.title,t.genre=n.genre,t.description=n.description,t.cost=n.cost,t.products=r.getProducts(),t.addOrder=function(t){e.addOrder({title:n.title,id:e.getOrders().length+1,cost:n.cost,quantity:1})},t.deleteProduct=function(){var o=t.products.indexOf(n);r.deleteProduct({index:o,product:n})}}]),shopApp.controller("addProduct",["$scope","productsFactory",function(t,o){t.pageStyle="addStyle",t.addProduct=function(){o.addProduct({title:t.newProduct.title,img:t.newProduct.img,description:t.newProduct.desc,genre:t.newProduct.genre,cost:t.newProduct.cost,id:Math.random()})}}]),shopApp.controller("mainController",["$scope","$location","$routeParams","productsFactory","ordersFactory",function(t,o,r,e,n){t.pageStyle="mainPageStyle",t.pageClass="page-style",t.products=[],t.orders=[],t.item={};var d=function(){e.getJSON().then(function(o){var r=[];o.data.forEach(function(t){var o={};o.description=t.description,o.title=t.title,o.img=t.img,o.genre=t.genre,o.cost=t.cost,o.id=t.id,r.push(o)}),e.setProducts(r),t.products=r})};t.products=d(),t.orders=n.getOrders()}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
