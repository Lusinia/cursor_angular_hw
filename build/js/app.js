"use strict";var shopApp=angular.module("shopApp",["ngRoute","ngAnimate"]);shopApp.config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"../partials/home.html",controller:"MainController"}).when("/add",{templateUrl:"../partials/add.html",controller:"AddProduct"}).when("/orders",{templateUrl:"../partials/orders.html",controller:"ShowOrders"}).when("/product/:id",{templateUrl:"../partials/product.html",controller:"ShowProduct"}).otherwise({redirectTo:"/orders"}),e.html5Mode(!0)}]),angular.module("shopApp").run(["$templateCache",function(t){t.put("../partials/add.html",'<div class={{pageStyle}}><h2 class=text-primary>Добавить книгу в список</h2><form name=form class=css-form novalidate><div class=form-group><label for=name>Title <input type=text id=name name=name class=form-control data-ng-model=newProduct.title required ng-minlength=2></label><p ng-show=form.name.$error.minlength class=help-block>Название книги слишком короткое.</p></div><div class=form-group><label for=img>Image url <input type=text id=img class=form-control name=img data-ng-model=newProduct.img required ng-pattern="/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/"></label><p ng-show=form.img.$error.pattern class=help-block>Укажите изображение книги.</p></div><div class=form-group><label for=genre>Genre<select name=selected id=genre data-ng-model=newProduct.genre ng-options="option for option in options" required></select></label><p ng-show=form.genre.$error.required class=help-block>Какого жанра эта книга.</p></div><div class=form-group><label for=cost>Cost <input type=text id=cost class=form-control name=cost data-ng-model=newProduct.cost required ng-pattern="/^[0-9]{1,}$/"></label><p ng-show=form.cost.$error.pattern class=help-block>Введите стоимость книги.</p></div><div class=form-group><label for=desc>Description <textarea id=desc rows=5 name=desc class=form-control data-ng-model=newProduct.desc required ng-minlength=2></textarea></label><p ng-show=form.desc.$error.minlength class=help-block>Укажите описание книги.</p></div><div class=buttonWrapper><button type=submit data-ng-click=addProduct() class="btn btn-success" ng-disabled=form.$invalid>Добавить</button> <a href="/" class="btn btn-primary">На главную</a></div></form></div>'),t.put("../partials/home.html",'<div class="{{ pageStyle }}"><h2>Книги на любой вкус</h2><div class=top-page><form action="http://localhost:8080/" method=POST class=auth ng-controller=AuthController><input type=text name=login ng-model=username placeholder=Login class="form-control auth-input"> <input type=password name=password ng-model=password placeholder=Password class="form-control auth-input"> <button type=submit ng-click=register() class="btn btn-info auth-input">Register</button> <button type=button ng-click=login() class="btn btn-info auth-input">Log In</button> <button type=submit ng-click=logout() class="btn btn-info auth-input">Log Out</button></form><div class=top-page-wrapper><a href=/add class="btn btn-primary btn-lg">Добавить книгу</a> <a href=/orders data-ng-click=setOrdersNumber() class="btn btn-primary btn-lg">Мои заказы <span class="glyphicon glyphicon-flash" aria-hidden=true></span> {{orders.length}}</a><select name=sorting-list data-ng-model=sortList.type ng-options="option.value as option.name for option in typeOptions"></select></div></div><aside><ul class=list-group><li class=list-group-item data-ng-repeat="genre in genreList" ng-click=myFilter(genre.val)><span class=badge>{{genre.num}}</span> {{genre.val}}</li><li class=list-group-item ng-click=myFilter(null)><span class=badge>{{products.length}}</span>Показать все книги</li><li>Stack: Mongo Express Angular Node</li></ul></aside><ul class=list ng-show=isLoaded><li data-ng-repeat="prod in products | filter: filters | orderBy: sortList.type" data-ng-click=showProduct(prod) data-ng-model=item class="fadein products"><md-card><p class=genre>{{ prod.genre }}</p><a href="/product/{{ prod.id }}"><h3>{{ prod.title }}</h3><img src="{{ prod.img }}" width=100 class=md-card-image alt="image caption"><br></a><p class=desc>{{ prod.description.substring(0, 50) }} ...</p><div class=cost>{{prod.cost}}$</div></md-card></li></ul></div>'),t.put("../partials/orders.html",'<div class={{pageStyle}}><h2>Твои заказы</h2><ul class=orders-list><li data-ng-repeat=\'order in orders | filter: order.id | orderBy: "id"\'>№ {{ order.id }}. <span>{{ order.title }}</span> - {{ order.quantity }} pc ({{ order.cost*order.quantity}} $) <button class="btn btn-danger" data-ng-click=removeOrder($index)>Удалить</button></li></ul><div class=sum><span>Общая сумма:</span> <span class=sumInfo>{{ sum }} $</span></div><a href="/" class="btn btn-primary btn-lg">На главную</a></div>'),t.put("../partials/product.html",'<div class={{pageStyle}}><a href=#orders class="btn btn-danger btn-lg buy" data-ng-click=addOrder(item)>Купить всего за $ {{ cost }}</a><div class=product-content><h1>{{ title}}</h1><img class=img-responsive src="{{ img }}" alt=img width=300><p class=desc>{{ description }}</p><p><b>Жанр: <span>{{genre}}</span></b></p></div><a href=# ng-click=deleteProduct() class="btn btn-warning">Удалить книгу</a> <a href="/" class="btn btn-info">На главную</a></div>')}]),shopApp.factory("ordersFactory",["$location",function(t){var e=[{id:1,title:"Cat in the dark",img:"./img/cat2.jpg",desc:"Its just me",cost:"50",quantity:1}],r={};return r.getOrders=function(){return e},r.addOrder=function(r){if(e.length>0){var o=!1;e.forEach(function(t){r.title===t.title&&(o=!0,t.quantity++)}),o||e.push(r)}t.path("/")},r.defineCostForItems=function(t){t.reduce(t,function(t,e){e+=t.cost},0)},r}]),shopApp.factory("productsFactory",["$http","$location","$timeout",function(t,e,r){var o="http://localhost:8080/",n=function(){return t.get(o)},s=[],a={};return a.getJSON=function(){return n()},a.getProducts=function(){return s},a.setProducts=function(t){s=t},a.addProduct=function(n){t({method:"post",url:o,data:JSON.stringify(n),config:"Content-Type: application/json;"}).then(function(t){console.log(t),r(function(){e.path("/")},1e3)},function(t){console.log(t)})},a.deleteProduct=function(n){var s={index:n.index,productId:n.product.id};t.delete(o+"product/"+s.productId,{params:s}).then(function(t){r(function(){e.path("/")},1e3),console.log(t)})},a.findProductById=function(t){var e=void 0;return s.forEach(function(r){r.id==t&&(e=r)}),e},a}]),shopApp.factory("usersFactory",["$location","$http",function(t,e){var r="http://localhost:8080/",o=function(){return e.get(r+"/auth/quote")},n={};return n.getUsers=function(){return o},n.register=function(){return e.post(r+"/auth/register",{username:username,password:password})},n.login=function(t,o){return e.post(r+"/auth/login",{username:t,password:o})},n}]),shopApp.controller("AddProduct",["$scope","productsFactory",function(t,e){t.pageStyle="addStyle",t.options=["Детективы","Психология","Фантастика","Фентези","Сказки","Женские романы","Религия","Ужасы"],t.addProduct=function(){e.addProduct({title:t.newProduct.title,img:t.newProduct.img,description:t.newProduct.desc,genre:t.newProduct.genre,cost:+t.newProduct.cost,id:Math.random()})}}]),shopApp.controller("AuthController",["$scope","usersFactory","productsFactory","ordersFactory",function(t,e,r,o){function n(t){var e=t.data?t.data.token:null;e&&console.log("JWT:",e)}var s={username:t.username,password:t.password};t.login=function(t){console.log("user",s)},t.getQuote=function(){s.getQuote().then(n,n)}}]),shopApp.controller("MainController",["$scope","$location","$routeParams","productsFactory","ordersFactory",function(t,e,r,o,n){t.pageStyle="mainPageStyle",t.pageClass="page-style",t.products=[],t.isLoaded=!1,t.orders=[],t.genreList=[],t.filters="",t.typeOptions=[{name:"Название",value:"title"},{name:"Жанр",value:"genre"},{name:"Цена по возрастанию",value:"cost"}],t.sortList={type:t.typeOptions[0].value},t.myFilter=function(e){t.filters=null==e?"":e};var s=function(){o.getJSON().then(function(e){var r=[];e.data.forEach(function(t){var e={};e.description=t.description,e.title=t.title,e.img=t.img,e.genre=t.genre,e.cost=+t.cost,e.id=t.id,r.push(e)}),o.setProducts(r),t.products=r;var n=_.map(r,"genre"),s=function(){n.sort();for(var t={},e=null,r=0,o=0;o<n.length;o++)n[o]!=e?(r=1,t[e=n[o]]=r):(r++,t[e]=r);return t}(),a=_.map(s,function(t,e){return{num:t,val:e||null}});t.genreList=a})};t.products=s(),t.orders=n.getOrders(),t.isLoaded=!0}]),shopApp.controller("ShowOrders",["$scope","$routeParams","productsFactory","ordersFactory",function(t,e,r,o){t.pageStyle="showOrdersStyle",t.orders=[],t.sum=o.defineCostForItems(o.getOrders()),t.item={},t.selected={value:0};t.orders=o.getOrders(),t.removeOrder=function(e){t.orders[e].quantity>1?t.orders[e].quantity-=1:1===t.orders[e].quantity&&t.orders.splice(e,1)}}]),shopApp.controller("ShowProduct",["$scope","$routeParams","productsFactory","ordersFactory",function(t,e,r,o){t.pageStyle="showProductStyle",t.ProductId=e.id;var n=r.findProductById(t.ProductId);t.img=n.img,t.title=n.title,t.genre=n.genre,t.description=n.description,t.cost=n.cost,t.products=r.getProducts(),t.addOrder=function(t){o.addOrder({title:n.title,id:o.getOrders().length+1,cost:n.cost,quantity:1})},t.deleteProduct=function(){console.log(n);var e=t.products.indexOf(n);r.deleteProduct({index:e,product:n})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
